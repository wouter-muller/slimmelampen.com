{"/Users/moberlehner/Sites/css-selector-extract/src/index.ts": {"path":"/Users/moberlehner/Sites/css-selector-extract/src/index.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":16},"end":{"line":3,"column":34}},"2":{"start":{"line":4,"column":31},"end":{"line":4,"column":72}},"3":{"start":{"line":8,"column":0},"end":{"line":10,"column":71}},"4":{"start":{"line":8,"column":75},"end":{"line":10,"column":70}},"5":{"start":{"line":14,"column":0},"end":{"line":17,"column":3}},"6":{"start":{"line":14,"column":31},"end":{"line":17,"column":2}},"7":{"start":{"line":15,"column":19},"end":{"line":15,"column":47}},"8":{"start":{"line":16,"column":4},"end":{"line":16,"column":20}},"9":{"start":{"line":21,"column":0},"end":{"line":24,"column":2}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":22},"end":{"line":8,"column":23}},"loc":{"start":{"line":8,"column":75},"end":{"line":10,"column":70}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":18},"end":{"line":14,"column":19}},"loc":{"start":{"line":14,"column":31},"end":{"line":17,"column":2}},"line":14},"2":{"name":"(anonymous_2)","decl":{"start":{"line":14,"column":43},"end":{"line":14,"column":44}},"loc":{"start":{"line":14,"column":56},"end":{"line":17,"column":1}},"line":14}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":13,"5":1,"6":13,"7":13,"8":13,"9":1},"f":{"0":13,"1":13,"2":13},"b":{},"inputSourceMap":{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";;AAAA,mCAAmC;AAEnC,yEAA0E;AAI1E;;GAEG;AACU,QAAA,WAAW,GAAG,CAAC,EAC1B,GAAG,EACH,OAAO,EACP,aAAa,EACb,aAAa,GACG,KAAK,OAAO,CAAC,sBAAsB,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;KAC3E,OAAO,CAAC,GAAG,EAAE,EAAE,MAAM,EAAE,aAAa,EAAE,CAAC,CAAC,GAAG;KAC3C,OAAO,CAAC,oDAAoD,EAAE,EAAE,CAAC,CAAC;AAErE;;GAEG;AACU,QAAA,OAAO,GAAG,CAAC,OAAwB,KAAK,IAAI,OAAO,CAAC,CAAC,OAAO;IACvE,MAAM,MAAM,GAAG,mBAAW,CAAC,OAAO,CAAC,CAAC;IACpC,OAAO,CAAC,MAAM,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC;AAEH;;GAEG;AACH,kBAAe;IACb,OAAO,EAAP,eAAO;IACP,WAAW,EAAX,mBAAW;CACZ,CAAC","sourcesContent":["import * as postcss from 'postcss';\n\nimport postcssSelectorExtract = require('./lib/postcss-selector-extract');\n\nimport { IProcessOptions } from './interfaces/IProcessOptions';\n\n/**\n * Synchronously extract and replace CSS selectors from a string.\n */\nexport const processSync = ({\n  css,\n  filters,\n  postcssSyntax,\n  preserveLines,\n}: IProcessOptions) => postcss(postcssSelectorExtract(filters, preserveLines))\n  .process(css, { syntax: postcssSyntax }).css\n  .replace(/\\/\\* START preserve lines|preserve lines END \\*\\//g, ``);\n\n/**\n * Asynchronously extract and replace CSS selectors from a string.\n */\nexport const process = (options: IProcessOptions) => new Promise((resolve) => {\n  const result = processSync(options);\n  resolve(result);\n});\n\n/**\n * cssSelectorExtract\n */\nexport default {\n  process,\n  processSync,\n};\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"f12d24dcf8abb980cc4c021c30c4d31b3a9845aa"}
,"/Users/moberlehner/Sites/css-selector-extract/src/lib/filter-selector.ts": {"path":"/Users/moberlehner/Sites/css-selector-extract/src/lib/filter-selector.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":28,"column":2}},"1":{"start":{"line":3,"column":22},"end":{"line":3,"column":24}},"2":{"start":{"line":4,"column":4},"end":{"line":26,"column":7}},"3":{"start":{"line":5,"column":25},"end":{"line":5,"column":66}},"4":{"start":{"line":6,"column":36},"end":{"line":6,"column":62}},"5":{"start":{"line":7,"column":41},"end":{"line":7,"column":72}},"6":{"start":{"line":8,"column":34},"end":{"line":8,"column":59}},"7":{"start":{"line":9,"column":38},"end":{"line":13,"column":17}},"8":{"start":{"line":10,"column":12},"end":{"line":12,"column":64}},"9":{"start":{"line":14,"column":31},"end":{"line":14,"column":88}},"10":{"start":{"line":15,"column":8},"end":{"line":24,"column":9}},"11":{"start":{"line":16,"column":12},"end":{"line":18,"column":29}},"12":{"start":{"line":21,"column":12},"end":{"line":23,"column":13}},"13":{"start":{"line":22,"column":16},"end":{"line":22,"column":28}},"14":{"start":{"line":25,"column":8},"end":{"line":25,"column":21}},"15":{"start":{"line":27,"column":4},"end":{"line":27,"column":23}}},"fnMap":{"0":{"name":"filterSelector","decl":{"start":{"line":2,"column":26},"end":{"line":2,"column":40}},"loc":{"start":{"line":2,"column":90},"end":{"line":28,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":4,"column":17},"end":{"line":4,"column":18}},"loc":{"start":{"line":4,"column":37},"end":{"line":26,"column":5}},"line":4},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":65},"end":{"line":9,"column":66}},"loc":{"start":{"line":9,"column":95},"end":{"line":13,"column":9}},"line":9}},"branchMap":{"0":{"loc":{"start":{"line":5,"column":25},"end":{"line":5,"column":66}},"type":"binary-expr","locations":[{"start":{"line":5,"column":25},"end":{"line":5,"column":48}},{"start":{"line":5,"column":52},"end":{"line":5,"column":66}}],"line":5},"1":{"loc":{"start":{"line":7,"column":41},"end":{"line":7,"column":72}},"type":"binary-expr","locations":[{"start":{"line":7,"column":41},"end":{"line":7,"column":60}},{"start":{"line":7,"column":64},"end":{"line":7,"column":72}}],"line":7},"2":{"loc":{"start":{"line":10,"column":19},"end":{"line":12,"column":63}},"type":"cond-expr","locations":[{"start":{"line":11,"column":16},"end":{"line":11,"column":65}},{"start":{"line":12,"column":16},"end":{"line":12,"column":63}}],"line":10},"3":{"loc":{"start":{"line":14,"column":31},"end":{"line":14,"column":88}},"type":"binary-expr","locations":[{"start":{"line":14,"column":31},"end":{"line":14,"column":57}},{"start":{"line":14,"column":61},"end":{"line":14,"column":88}}],"line":14},"4":{"loc":{"start":{"line":15,"column":8},"end":{"line":24,"column":9}},"type":"if","locations":[{"start":{"line":15,"column":8},"end":{"line":24,"column":9}},{"start":{"line":15,"column":8},"end":{"line":24,"column":9}}],"line":15},"5":{"loc":{"start":{"line":15,"column":12},"end":{"line":15,"column":72}},"type":"binary-expr","locations":[{"start":{"line":15,"column":12},"end":{"line":15,"column":29}},{"start":{"line":15,"column":33},"end":{"line":15,"column":54}},{"start":{"line":15,"column":58},"end":{"line":15,"column":72}}],"line":15},"6":{"loc":{"start":{"line":16,"column":26},"end":{"line":18,"column":28}},"type":"cond-expr","locations":[{"start":{"line":17,"column":16},"end":{"line":17,"column":67}},{"start":{"line":18,"column":16},"end":{"line":18,"column":28}}],"line":16},"7":{"loc":{"start":{"line":21,"column":12},"end":{"line":23,"column":13}},"type":"if","locations":[{"start":{"line":21,"column":12},"end":{"line":23,"column":13}},{"start":{"line":21,"column":12},"end":{"line":23,"column":13}}],"line":21}},"s":{"0":3,"1":80,"2":80,"3":130,"4":130,"5":130,"6":130,"7":130,"8":41,"9":130,"10":130,"11":37,"12":37,"13":29,"14":101,"15":80},"f":{"0":80,"1":130,"2":41},"b":{"0":[130,90],"1":[130,90],"2":[1,40],"3":[130,15],"4":[37,93],"5":[130,110,102],"6":[13,24],"7":[29,8]},"inputSourceMap":{"version":3,"file":"filter-selector.js","sourceRoot":"","sources":["filter-selector.ts"],"names":[],"mappings":";AAKA,iBAAS,wBAAwB,EAC/B,YAAY,EACZ,mBAAmB,EACnB,OAAO,GACQ;IACf,IAAI,WAAW,GAAG,EAAE,CAAC;IAErB,OAAO,CAAC,IAAI,CAAC,CAAC,cAAc;QAC1B,MAAM,QAAQ,GAAG,cAAc,CAAC,QAAQ,IAAI,cAAc,CAAC;QAC3D,MAAM,mBAAmB,GAAG,cAAc,CAAC,WAAW,CAAC;QACvD,MAAM,wBAAwB,GAAG,mBAAmB,IAAI,QAAQ,CAAC;QAEjE,MAAM,iBAAiB,GAAG,QAAQ,KAAK,YAAY,CAAC;QACpD,MAAM,qBAAqB,GAAG,mBAAmB,CAAC,MAAM,CAAC,CAAC,IAAa,EAAE,kBAA0B;YACjG,MAAM,CAAC,wBAAwB,YAAY,MAAM;gBAC/C,wBAAwB,CAAC,IAAI,CAAC,kBAAkB,CAAC;gBACjD,kBAAkB,KAAK,wBAAwB,CAAC;QACpD,CAAC,EAAE,KAAK,CAAC,CAAC;QACV,MAAM,cAAc,GAAG,QAAQ,YAAY,MAAM,IAAI,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAEjF,EAAE,CAAC,CAAC,iBAAiB,IAAI,qBAAqB,IAAI,cAAc,CAAC,CAAC,CAAC;YACjE,WAAW,GAAG,mBAAmB;gBAC/B,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,mBAAmB,CAAC;gBACnD,YAAY,CAAC;YAEf,qFAAqF;YACrF,mEAAmE;YACnE,EAAE,CAAC,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC;gBAC3B,MAAM,CAAC,IAAI,CAAC;YACd,CAAC;QACH,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACf,CAAC,CAAC,CAAC;IAEH,MAAM,CAAC,WAAW,CAAC;AACrB,CAAC,CAAC","sourcesContent":["import { IFilterOptions } from '../interfaces/IFilterOptions';\n\n/**\n * Check if a selector should be whitelisted and / or replaced.\n */\nexport = function filterSelector({\n  ruleSelector,\n  ruleParentSelectors,\n  filters,\n}: IFilterOptions) {\n  let newSelector = ``;\n\n  filters.some((selectorFilter) => {\n    const selector = selectorFilter.selector || selectorFilter;\n    const replacementSelector = selectorFilter.replacement;\n    const parentComparisonSelector = replacementSelector || selector;\n\n    const selectorsAreEqual = selector === ruleSelector;\n    const parentSelectorIsEqual = ruleParentSelectors.reduce((bool: boolean, ruleParentSelector: string) => {\n      return parentComparisonSelector instanceof RegExp ?\n        parentComparisonSelector.test(ruleParentSelector) :\n        ruleParentSelector === parentComparisonSelector;\n    }, false);\n    const selectorsMatch = selector instanceof RegExp && selector.test(ruleSelector);\n\n    if (selectorsAreEqual || parentSelectorIsEqual || selectorsMatch) {\n      newSelector = replacementSelector ?\n        ruleSelector.replace(selector, replacementSelector) :\n        ruleSelector;\n\n      // Do not stop iterating over the selector filters if the parent selector was matched\n      // because child selectors may get replaced in a further iteration.\n      if (!parentSelectorIsEqual) {\n        return true;\n      }\n    }\n    return false;\n  });\n\n  return newSelector;\n};\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"aec0da81fb92e34189a86c5d21fe9ccce3cc448a"}
,"/Users/moberlehner/Sites/css-selector-extract/src/lib/postcss-selector-extract.ts": {"path":"/Users/moberlehner/Sites/css-selector-extract/src/lib/postcss-selector-extract.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":2,"column":34}},"1":{"start":{"line":3,"column":23},"end":{"line":3,"column":51}},"2":{"start":{"line":4,"column":0},"end":{"line":40,"column":2}},"3":{"start":{"line":5,"column":4},"end":{"line":39,"column":7}},"4":{"start":{"line":5,"column":61},"end":{"line":39,"column":5}},"5":{"start":{"line":8,"column":8},"end":{"line":32,"column":11}},"6":{"start":{"line":9,"column":34},"end":{"line":17,"column":62}},"7":{"start":{"line":11,"column":39},"end":{"line":11,"column":88}},"8":{"start":{"line":12,"column":39},"end":{"line":16,"column":14}},"9":{"start":{"line":17,"column":42},"end":{"line":17,"column":61}},"10":{"start":{"line":18,"column":12},"end":{"line":31,"column":13}},"11":{"start":{"line":19,"column":16},"end":{"line":19,"column":56}},"12":{"start":{"line":22,"column":16},"end":{"line":29,"column":17}},"13":{"start":{"line":23,"column":38},"end":{"line":23,"column":80}},"14":{"start":{"line":24,"column":20},"end":{"line":28,"column":23}},"15":{"start":{"line":30,"column":16},"end":{"line":30,"column":30}},"16":{"start":{"line":34,"column":8},"end":{"line":38,"column":11}},"17":{"start":{"line":35,"column":12},"end":{"line":37,"column":13}},"18":{"start":{"line":36,"column":16},"end":{"line":36,"column":30}}},"fnMap":{"0":{"name":"postcssSelectorExtract","decl":{"start":{"line":4,"column":26},"end":{"line":4,"column":48}},"loc":{"start":{"line":4,"column":86},"end":{"line":40,"column":1}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":5,"column":55},"end":{"line":5,"column":56}},"loc":{"start":{"line":5,"column":61},"end":{"line":39,"column":5}},"line":5},"2":{"name":"(anonymous_2)","decl":{"start":{"line":5,"column":61},"end":{"line":5,"column":62}},"loc":{"start":{"line":5,"column":72},"end":{"line":39,"column":5}},"line":5},"3":{"name":"(anonymous_3)","decl":{"start":{"line":8,"column":24},"end":{"line":8,"column":25}},"loc":{"start":{"line":8,"column":34},"end":{"line":32,"column":9}},"line":8},"4":{"name":"(anonymous_4)","decl":{"start":{"line":11,"column":21},"end":{"line":11,"column":22}},"loc":{"start":{"line":11,"column":39},"end":{"line":11,"column":88}},"line":11},"5":{"name":"(anonymous_5)","decl":{"start":{"line":12,"column":21},"end":{"line":12,"column":22}},"loc":{"start":{"line":12,"column":39},"end":{"line":16,"column":14}},"line":12},"6":{"name":"(anonymous_6)","decl":{"start":{"line":17,"column":24},"end":{"line":17,"column":25}},"loc":{"start":{"line":17,"column":42},"end":{"line":17,"column":61}},"line":17},"7":{"name":"(anonymous_7)","decl":{"start":{"line":34,"column":26},"end":{"line":34,"column":27}},"loc":{"start":{"line":34,"column":36},"end":{"line":38,"column":9}},"line":34}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":49},"end":{"line":4,"column":61}},"type":"default-arg","locations":[{"start":{"line":4,"column":59},"end":{"line":4,"column":61}}],"line":4},"1":{"loc":{"start":{"line":4,"column":63},"end":{"line":4,"column":84}},"type":"default-arg","locations":[{"start":{"line":4,"column":79},"end":{"line":4,"column":84}}],"line":4},"2":{"loc":{"start":{"line":14,"column":37},"end":{"line":14,"column":96}},"type":"cond-expr","locations":[{"start":{"line":14,"column":60},"end":{"line":14,"column":91}},{"start":{"line":14,"column":94},"end":{"line":14,"column":96}}],"line":14},"3":{"loc":{"start":{"line":18,"column":12},"end":{"line":31,"column":13}},"type":"if","locations":[{"start":{"line":18,"column":12},"end":{"line":31,"column":13}},{"start":{"line":18,"column":12},"end":{"line":31,"column":13}}],"line":18},"4":{"loc":{"start":{"line":22,"column":16},"end":{"line":29,"column":17}},"type":"if","locations":[{"start":{"line":22,"column":16},"end":{"line":29,"column":17}},{"start":{"line":22,"column":16},"end":{"line":29,"column":17}}],"line":22},"5":{"loc":{"start":{"line":35,"column":12},"end":{"line":37,"column":13}},"type":"if","locations":[{"start":{"line":35,"column":12},"end":{"line":37,"column":13}},{"start":{"line":35,"column":12},"end":{"line":37,"column":13}}],"line":35},"6":{"loc":{"start":{"line":35,"column":16},"end":{"line":35,"column":48}},"type":"binary-expr","locations":[{"start":{"line":35,"column":16},"end":{"line":35,"column":26}},{"start":{"line":35,"column":30},"end":{"line":35,"column":48}}],"line":35}},"s":{"0":2,"1":2,"2":2,"3":15,"4":15,"5":13,"6":68,"7":74,"8":74,"9":74,"10":68,"11":29,"12":39,"13":2,"14":2,"15":39,"16":13,"17":13,"18":6},"f":{"0":15,"1":15,"2":13,"3":68,"4":74,"5":74,"6":74,"7":13},"b":{"0":[2],"1":[14],"2":[16,58],"3":[29,39],"4":[2,37],"5":[6,7],"6":[13,8]},"inputSourceMap":{"version":3,"file":"postcss-selector-extract.js","sourceRoot":"","sources":["postcss-selector-extract.ts"],"names":[],"mappings":";AAAA,mCAAmC;AAEnC,oDAAqD;AAOrD,iBAAS,gCAAgC,UAAsC,EAAE,EAAE,aAAa,GAAG,KAAK;IACtG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,2BAA2B,EAAE,MAAM,CAAC,KAAK;QAC7D,oDAAoD;QACpD,mCAAmC;QACnC,KAAK,CAAC,SAAS,CAAC,CAAC,IAAS;YACxB,MAAM,aAAa,GAAG,IAAI,CAAC,QAAQ;iBAChC,KAAK,CAAC,GAAG,CAAC;iBACV,GAAG,CAAC,CAAC,YAAiB,KAAK,YAAY,CAAC,OAAO,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;iBAC7E,GAAG,CAAC,CAAC,YAAiB,KAAK,cAAc,CAAC;gBACzC,YAAY;gBACZ,mBAAmB,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE;gBAChF,OAAO;aACR,CAAC,CAAC;iBACF,MAAM,CAAC,CAAC,YAAiB,KAAK,YAAY,CAAC,MAAM,CAAC,CAAC;YAEtD,EAAE,CAAC,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC;gBACzB,IAAI,CAAC,QAAQ,GAAG,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAC1C,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;oBAClB,MAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC;oBAE7D,IAAI,CAAC,WAAW,CAAC;wBACf,IAAI,EAAE,SAAS;wBACf,IAAI,EAAE,uBAAuB,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,CAAC,CAAC,oBAAoB;wBAC3E,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC;qBAC1D,CAAC,CAAC;gBACL,CAAC;gBACD,IAAI,CAAC,MAAM,EAAE,CAAC;YAChB,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,wBAAwB;QACxB,KAAK,CAAC,WAAW,CAAC,CAAC,IAAI;YACrB,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;gBACrC,IAAI,CAAC,MAAM,EAAE,CAAC;YAChB,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC","sourcesContent":["import * as postcss from 'postcss';\n\nimport filterSelector = require('./filter-selector');\n\nimport { ISelectorFilter } from '../interfaces/ISelectorFilter';\n\n/**\n * Provide a PostCSS plugin for extracting and replacing CSS selectors.\n */\nexport = function postcssSelectorExtract(filters: ISelectorFilter[]|string[] = [], preserveLines = false) {\n  return postcss.plugin(`postcss-extract-selectors`, () => (nodes) => {\n    // We have to force `any` type, because postcss type\n    // definitions seem to be outdated.\n    nodes.walkRules((rule: any) => {\n      const ruleSelectors = rule.selector\n        .split(`,`)\n        .map((ruleSelector: any) => ruleSelector.replace(/(\\r\\n|\\n|\\r)/gm, ``).trim())\n        .map((ruleSelector: any) => filterSelector({\n          ruleSelector,\n          ruleParentSelectors: rule.parent.selector ? rule.parent.selector.split(`,`) : [],\n          filters,\n        }))\n        .filter((ruleSelector: any) => ruleSelector.length);\n\n      if (ruleSelectors.length) {\n        rule.selector = ruleSelectors.join(`,`);\n      } else {\n        if (preserveLines) {\n          const ruleLines = rule.toString().split(/\\r\\n|\\r|\\n/).length;\n\n          rule.cloneBefore({\n            type: `comment`,\n            text: `START preserve lines${'\\n'.repeat(ruleLines - 1)}preserve lines END`,\n            raws: Object.assign(rule.raws, { left: ' ', right: ' ' }),\n          });\n        }\n        rule.remove();\n      }\n    });\n\n    // Remove empty @ rules.\n    nodes.walkAtRules((rule) => {\n      if (rule.nodes && !rule.nodes.length) {\n        rule.remove();\n      }\n    });\n  });\n};\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"ce341496475460ffa21889da32fb57859e8eb85b"}
}
